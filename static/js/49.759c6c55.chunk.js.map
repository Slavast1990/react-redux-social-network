{"version":3,"file":"static/js/49.759c6c55.chunk.js","mappings":"+JACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA4I,0BAA5I,EAAgL,yB,sBCchL,EAXmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,gBAAKC,UAAWC,EAAkB,IAAMA,EAAe,UACnD,SAAC,KAAO,CAACC,GAAIJ,EAAK,SAAED,EAAMM,QAGtC,ECDA,EAPgB,SAACN,GACb,OACI,gBAAKG,UAAWC,EAAgB,SAAEJ,EAAMO,SAEhD,E,iECFMC,GAAcC,EAAAA,EAAAA,GAAiB,IAiBjC,GAAeC,EAAAA,EAAAA,GAAW,CAACC,KAAM,2BAAjC,EAfmB,SAACX,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAa,WACnC,0BACI,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GAClBC,SAAU,CAACC,EAAAA,EAAUV,GACrBF,KAAM,iBAAkBa,YAAa,0BAEzC,0BACI,4CAIR,ICsBJ,EA/BgB,SAACnB,GAEjB,IAAIoB,EAAQpB,EAAMqB,YAEVC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAD,GAAO,OAAI,SAAC,EAAU,CAACjB,KAAMiB,EAAQjB,KAAuBJ,GAAIqB,EAAQrB,IAAxBqB,EAAQrB,GAAsB,IAElHuB,EAAmBL,EAAMb,QAAQiB,KAAI,SAAAjB,GAAO,OAAI,SAAC,EAAO,CAACA,QAASA,EAAQA,QAA0BL,GAAIK,EAAQL,IAAxBK,EAAQL,GAAsB,IAErGkB,EAAMM,eAO3B,OAAK1B,EAAM2B,QAGP,iBAAKxB,UAAWC,EAAgB,WAC5B,gBAAKD,UAAWC,EAAqB,SAChCkB,KAEL,gBAAKnB,UAAWC,EAAiB,UAC7B,yBAAMqB,OAGV,SAAC,EAAc,CAACb,SAfJ,SAACgB,GACjB5B,EAAM6B,YAAYD,EAAOF,eAC7B,QAE0B,SAAC,KAAQ,CAACrB,GAAG,UAc3C,E,iCCXA,GAAeyB,E,SAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAACX,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAEyB,SAACW,GACtB,MAAO,CACHH,YAAa,SAACH,GACVM,GAASC,EAAAA,EAAAA,IAAmBP,GAChC,EAGR,IAIIQ,EAAAA,EAFJ,CAGGC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__V+Tsd\",\"dialogsItems\":\"Dialogs_dialogsItems__BN7EB\",\"active\":\"Dialogs_active__DKVwa\",\"messages\":\"Dialogs_messages__gNNJP\",\"message\":\"Dialogs_message__FGnCe\"};","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={classes.dialogs + ' ' + classes.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { MaxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MaxLength50 = MaxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea}\r\n            validate={[required, MaxLength50]}\r\n            name={\"newMessageBody\"} placeholder={\"Enter your message\"} /> \r\n            </div>\r\n        <div>\r\n            <button>Send222</button>\r\n        </div>\r\n    </form>\r\n    )\r\n    }\r\n    \r\n    export default reduxForm ({form: 'dialog-add-message-form'}) (AddMessageForm);","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { SendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/dialogs-reducer\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\nlet state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialogs => <DialogItem name={dialogs.name} key={dialogs.id} id={dialogs.id} />);\r\n\r\n    let messagesElements = state.message.map(message => <Message message={message.message} key={message.id} id={message.id} />);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.SendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to=\"/Login\"/>;\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n               \r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { SendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport store from \"../../redux/redux-store\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        SendMessage: (newMessageBody) => {\r\n            dispatch(SendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);"],"names":["props","path","id","className","classes","to","name","message","MaxLength50","MaxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","messagesElements","newMessageBody","isAuth","values","SendMessage","compose","connect","dispatch","SendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}